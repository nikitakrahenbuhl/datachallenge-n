---
title: "Exploring the impact of recreation on deer movement"
author: "Nikita Krähenbühl"
execute:
  echo: false
  warning: false
  output: false
format: 
  revealjs:
    theme: default
editor: visual
---

## Context: Deer movement data from Sihlwald {.scrollable}

-   **Application area:** Recreation and Wildlife

-   **Conceptual models:**

    -   Entity (movement of a single deer)

    -   Field based (grouping of deer)

-   **Data structures:**

    -   GPS Time Series (vector, unconstrained, active, regular measurements)
    -   Hiking paths (vector)
    -   Heatmap from strava (Raster)

-   **Available data**

    -   14 GPS Tracks over multiple years

    -   Hiking trails, road infrastructure

    -   Relative activity frequency data from Strava [^1]

[^1]: Courtesy of Nils Ratnaweera

## Research questions

-   **Does deer movement increase during periods of greater recreational activity**
    -   Weekend *vs* weekday

    -   Evening *vs* midday *vs* early morning
-   **Is deer movement constrained by recreational activity?**
    -   Do deer cross hiking paths, does this vary temporally?

## Research plan

-   Perform explorative analysis

    -   How many deer?
    -   What timeframe?
    -   Identify what to clean/filter

-   Gather additional data

## Preliminary Results {.scrollable}

```{r include=FALSE}
library(tidyverse)
library(sf)
library(tmap)
library(lubridate)
library(ggplot2)
library(RColorBrewer)
library(ggpubr)
library(plotly)
library(multcomp)

theme_set(theme_classic())

options(warning=FALSE)    # Don't show warnings
```

```{r}
deer <- read_csv("/Users/nikitakrahenbuhl/Documents/Masters/PandT/project/datachallenge-n/data/all_deer_cleaned.csv")
deer %>% 
  group_by(reh) %>% 
  summarise(n = n())

summary(deer)
str(deer)
```

```{r}
## Reading geometry, setting LV95 as coordinates
deer %>% 
  st_as_sf(., coords = c("longitude", "latitude"), crs = 4326) %>% 
  st_transform(., crs = 2056) %>% 
  mutate(x = unlist(map(.$geometry,1)),
       y = unlist(map(.$geometry,2))) %>% 
  mutate(wdays = lubridate::wday(datetime_utc, label = TRUE), week_start = getOption("lubridate.week.start", -1)) -> deer_sf

deer_sf %>% st_set_geometry(NULL) -> deer

## lets assign some useful, basic movement parameters
speed_calculator <- function(df_input, interval){
  df_input %>% 
    group_by(reh) %>% 
    mutate(timelag = as.integer(difftime(lead(datetime_utc), datetime_utc, units = "secs")), 
           steplength = sqrt((y - lead(y,1))^2 + (x - lead(x,1))^2),
           timelag_minutes = timelag/60,
         speed_ms = steplength/timelag,
         speed_kph = speed_ms * 3.6,
         interval = interval) -> df_output
  
  return(df_output)
} 

speed_calculator(deer_sf, "1 minute") -> deer_sf
speed_calculator(deer, "1 minute") -> deer
```

Varied timeframes

```{r}
#| output: true
#| output-location: slide
ggplot(data = deer_sf, aes(x = datetime_utc, y = reh)) +
  geom_line() 

ggplot(deer) + geom_boxplot(aes(x=reh, y=timelag_minutes)) -> p1
ggplot(deer) + geom_histogram(aes(x=timelag_minutes), bins = 100) -> p2

ggarrange(p1,p2) %>% 
  annotate_figure(., top = text_grob("Average timelag (minutes) - 2 distinct sampling intervals", face = "bold", size = 14))

ggplot(deer) + geom_boxplot(aes(x=reh, y=steplength)) -> p1
ggplot(deer) + geom_histogram(aes(x=steplength), bins = 100) -> p2

ggarrange(p1,p2) %>% 
    annotate_figure(., top = text_grob("Average steplength (meters) - lazy deer", face = "bold", size = 14))


deer %>% filter(between(timelag_minutes, 3, 6)) -> deer_short

deer %>% filter(between(timelag_minutes, 3, 6)) %>% 
  ggplot(data = ., aes(x = datetime_utc, y = reh)) +
  geom_line() + geom_point() + labs(title="Timelag filtered between 3-6 minutes")


deer_sf %>% 
  group_by(reh) %>% 
  summarise(.) %>% 
  st_convex_hull(.) -> mcp


ggplot(mcp) + geom_sf(aes(fill = reh), alpha = 0.4) + geom_sf(data = deer_sf,(aes(color=reh))) + labs(title="Unfiltered spatial extent")
```

## How to continue? {.scrollable}

-   Filters:
    -   Timelag \~ 180 (deer overall)
    -   Timelag \~ 3 minutes (deer short)
    -   Steplength \< 2500m
    -   Remove inactive periods

```{r}
#| output: true
#| output-location: slide
deer %>% filter(between(timelag_minutes, 178, 182)) %>% 
  ggplot(., aes(x=x, y=y, color=reh)) + geom_path() + geom_point() +
  coord_fixed()

deer %>% filter(between(timelag_minutes, 178, 182)) %>%
  filter(steplength < 2500) %>% 
  ggplot(., aes(x=x, y=y, color=reh)) + geom_path() + geom_point() +
  coord_fixed()

deer %>% filter(between(timelag_minutes, 2, 7)) -> deer_short
deer %>% filter(between(timelag_minutes, 178, 182)) %>%  filter(steplength < 2500) -> deer


deer_short %>% 
  mutate(
    nMinus3 = sqrt((lag(y, 3)-y)^2 + (lag(x, 3)-x)^2),
    nMinus2 = sqrt((lag(y, 2)-y)^2+(lag(x, 2)-x)^2),  
    nMinus1 = sqrt((lag(y, 1)-y)^2+(lag(x, 1)-x)^2),
    nPlus1  = sqrt((y-lead(y, 1))^2+(x-lead(x, 1))^2), 
    nPlus2  = sqrt((y-lead(y, 2))^2+(x-lead(x, 2))^2),  
    nPlus3  = sqrt((y-lead(y, 3))^2+(x-lead(x, 3))^2)  
) %>% 
  rowwise(.) %>% 
  mutate(
    stepMean = mean(c(nMinus3, nMinus2, nMinus1, nPlus1, nPlus2, nPlus3))
  ) %>% 
  ungroup() %>% 
  mutate(static = stepMean < mean(stepMean, na.rm = TRUE)) -> deer_short

deer_short %>% 
  ggplot(data = ., aes(x = x, y = y)) +
    geom_point(aes(color = static)) +
    coord_fixed() + labs(title = "Static points")

rle_id <- function(vec){
  x <- rle(vec)$lengths
  as.factor(rep(seq_along(x), times=x))
}


```

Lets have a look at mean speed - averages per day, month and year

```{r}
#| output: true
#| output-location: slide
deer %>% 
  mutate(month = format(datetime_utc,"%B"), year = format(datetime_utc, "%Y")) %>% 
  group_by(reh, year, month, wdays) %>% 
  summarise(mean_steplength = mean(steplength), mean_speed = mean(speed_ms)) %>% 
  ggplot() + geom_tile(aes(x=wdays, y = month, fill = mean_speed)) + facet_wrap(~year) + labs(title="180 minute Intervals")

deer_short %>% 
  mutate(month = format(datetime_utc,"%B"), year = format(datetime_utc, "%Y")) %>% 
  group_by(reh, year, month, wdays) %>% 
  summarise(mean_steplength = mean(steplength), mean_speed = mean(speed_ms)) %>% 
  ggplot() + geom_tile(aes(x=wdays, y = month, fill = mean_speed)) + facet_wrap(~year) + labs(title = "Short intervals - data is much sparser")
```

Mean speed averaged per day for 180 minute Intervals

```{r}
#| output: true
#| output-location: slide
deer %>% 
  group_by(wdays) %>% 
  summarise(avg_steplength = mean(steplength, na.rm = TRUE), mean_speed = mean(speed_ms, na.rm = TRUE)) %>% 
  ggplot(., aes(x=wdays, y = mean_speed)) + geom_bar(stat="identity", width=.5, fill = "tomato3") 
  #geom_point(aes(x=wdays, y = avg_steplength))

deer %>% 
  mutate(hour = hour(round_date(datetime_utc, "hour"))) %>% 
  group_by(reh, wdays, hour) %>% 
  summarise(mean_steplength = mean(steplength), mean_speed = mean(speed_kph)) %>% 
  ggplot(data = ., aes(x=hour, y=mean_speed, color = reh))  + geom_line() + facet_wrap(~wdays) + labs(title="Averages over the hours per day")

```

Shorter intervals:

```{r}
#| output: true
#| output-location: slide
deer_short %>% 
  ggplot(data = ., aes(x=wdays, y=speed_ms)) + geom_boxplot(outlier.alpha = 0.1) +
  labs(title = "Average speed per day - 3 minute Interval")

deer_short %>% 
  filter(static==TRUE) %>% 
  ggplot(data = ., aes(x=wdays, y=speed_ms)) + geom_boxplot(outlier.alpha = 0.1) +
  labs(title = "Average speed per day - 3 minute Interval - Static points removed")

deer_short %>% 
  mutate(hour = hour(round_date(datetime_utc, "hour"))) %>% 
  group_by(reh, wdays, hour) %>%
  summarise(mean_steplength = mean(steplength), mean_speed = mean(speed_ms)) %>% 
  ggplot(data = ., aes(x=hour, y=mean_speed, color = reh))  + geom_line() + facet_wrap(~wdays)
```

Spatial component: Hiking Paths?

```{r}
#| output: true
#| output-location: slide
### Need to load the street/hiking data
# First create a polygon with bounding boc
x_coord <- c( 2679000, 2687981, 2687981, 2679000)
y_coord <- c(1241000, 1241000, 1228484, 1228484)
xym <- cbind(x_coord, y_coord)
library(sp)
p = Polygon(xym)
ps = Polygons(list(p),1)
sps = SpatialPolygons(list(ps))

strassen <- read_sf("/Users/nikitakrahenbuhl/Documents/Masters/PandT/project/datachallenge-n/data/swiss_TLM_data.gpkg","strassen")
boden <- read_sf("/Users/nikitakrahenbuhl/Documents/Masters/PandT/project/datachallenge-n/data/swiss_TLM_data.gpkg","bodenbedeckung")
```

```{r}
#| output: true
#| output-location: slide
source("/Users/nikitakrahenbuhl/Documents/Masters/PandT/project/datachallenge-n/strava.R")
#strava_get(zoom = 11)
library(terra)
strava <- rast("/Users/nikitakrahenbuhl/Documents/Masters/PandT/project/datachallenge-n/strava_all_11_hot/combined/05_cropped.tif") %>% crop(., sps)

deer %>%  st_as_sf(., coords = c("x", "y"), crs = 2056) -> deer_sf

deer_sf %>% 
  group_by(reh) %>% 
  summarise(.) %>% 
  st_convex_hull(.) -> mcp
```

```{r}
#| output: true
#| output-location: slide
strassen %>% filter(grepl("Weg|Autobahn|3m Strasse", OBJEKTART))  -> strassen_freizeit
strassen %>% filter(!is.na(WANDERWEGE)) -> wanderwege

tmap_mode("view") 
tm_shape(mcp) + tm_polygons("reh", alpha = 0.4) +
tm_shape(wanderwege) + tm_lines(col = "tomato3") 
```

Strava data: which paths are significant for sports?

```{r}
#| output: true
#| output-location: slide
plot(strava) 
```

## Problems

-   I don't **think** I will find weekend differences
-   Need to still explore constraints caused by hiking paths and examine Stava Data
    -   Bit behind (hoping for a productive Hackathon)
-   Quarto and revealjs is tricky
